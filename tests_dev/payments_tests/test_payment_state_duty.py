from pages.services.payments.state_duty_page import StateDutyPagefrom pages.start_page import StartPagefrom pages.services.payments.payments_page import PaymentsPageimport pytestimport allurefrom utils.screenshot_helper import take_screenshotfrom pages.services.services_page import ServicesPageclass TestPaymentStateDuty:    @pytest.mark.parametrize("doc_number, fio, city", [        ('FA6169953', 'АБДУРОСУЛОВ ДОСТОН', 'Москва')    ])    @pytest.mark.group_test    @allure.feature('Проверка оплаты госпошлины')    @allure.story('За выдачу паспорта гражданина РФ - город Москва')    def test_search_state_duty_moscow_city(self, appium_driver, doc_number, fio, city):        # Инициализация стартовой страницы        start_page = StartPage(appium_driver)        # Инициализация страницы с сервисами        services_page = ServicesPage(appium_driver)        # Инициализация страницы с вводом данных для оплаты госпошлины        state_duty_page = StateDutyPage(appium_driver)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_moscow_city',                        folder_name='main_page',                        screenshot_name=f"screen_after_launch_app")        # Переход в страницу с платежами        start_page.go_to_services()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_moscow_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_go_payments_page")        # Переход в оплату госпошлины        services_page.go_to_payment_state_duty()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_moscow_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_go_to_state_duty_page")        state_duty_page.choose_duty_category()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_moscow_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_choose_duty_category")        state_duty_page.choose_city(city=city)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_moscow_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_choose_city")        state_duty_page.set_doc_num(doc_num=doc_number)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_moscow_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_set_doc_num")        state_duty_page.set_fio(fio=fio)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_moscow_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_set_fio")        state_duty_page.click_payment_btn()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_moscow_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_click_payment_btn")        # Проверка на наличие страницы оплаты        assert state_duty_page.verify_payment_page_loaded_a3(), f'На странице не появилась форма для оплаты'        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_moscow_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_click_payment_btn")        # # Проверка на наличие текста "Тест оплаты"        # assert state_duty_page.check_test_payment_text(), 'На странице не появился текст для тестовой оплаты'        #        # # Кнопка оплаты        # state_duty_page.click_success_payment_btn()        # time.sleep(1)        #        # # Проверка на наличие текста "ОПЛАТА УСПЕШНО ПРОИЗВЕДЕНА!"        # assert state_duty_page.verify_payment_success(), 'Произошла ошибка при оплате'    @pytest.mark.parametrize("doc_number, fio, city", [        ('FA6169953', 'АБДУРОСУЛОВ ДОСТОН', 'Казань')    ])    @pytest.mark.group7    @allure.feature('Проверка оплаты госпошлины')    @allure.story('За выдачу паспорта гражданина РФ - город Казань')    def test_search_state_duty_kazan_city(self, appium_driver, doc_number, fio, city):        # Инициализация стартовой страницы        start_page = StartPage(appium_driver)        # Инициализация страницы с сервисами        services_page = ServicesPage(appium_driver)        # Инициализация страницы с вводом данных для оплаты госпошлины        state_duty_page = StateDutyPage(appium_driver)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_kazan_city',                        folder_name='main_page',                        screenshot_name=f"screen_after_launch_app")        # Переход в страницу с платежами        start_page.go_to_services()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_kazan_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_go_to_services_page")        # Переход в оплату госпошлины        services_page.go_to_payment_state_duty()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_kazan_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_go_to_state_duty_page")        state_duty_page.choose_duty_category()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_kazan_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_choose_duty_category")        state_duty_page.choose_city(city=city)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_kazan_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_choose_city")        state_duty_page.set_doc_num(doc_num=doc_number)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_kazan_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_set_doc_num")        state_duty_page.set_fio(fio=fio)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_kazan_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_set_fio")        state_duty_page.click_payment_btn()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_kazan_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_click_payment_btn")        # Проверка на наличие страницы оплаты        assert state_duty_page.verify_payment_page_loaded_a3(), f'На странице не появилась форма для оплаты'        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_moscow_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_click_payment_btn")    @pytest.mark.parametrize("doc_number, fio, city", [        ('FA6169953', 'АБДУРОСУЛОВ ДОСТОН', 'Санкт-Петербург')    ])    @allure.feature('Проверка оплаты госпошлины')    @pytest.mark.group7    @allure.story('За выдачу паспорта гражданина РФ - город Санкт-Петербург')    def test_search_state_duty_spb_city(self, appium_driver, doc_number, fio, city):        # Инициализация стартовой страницы        start_page = StartPage(appium_driver)        # Инициализация страницы с сервисами        services_page = ServicesPage(appium_driver)        # Инициализация страницы с вводом данных для оплаты госпошлины        state_duty_page = StateDutyPage(appium_driver)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_spb_city',                        folder_name='main_page',                        screenshot_name=f"screen_after_launch_app")        # Переход в страницу с сервисами        start_page.go_to_services()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_spb_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_go_to_services")        # Переход в оплату госпошлины        services_page.go_to_payment_state_duty()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_spb_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_go_to_state_duty_page")        state_duty_page.choose_duty_category()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_spb_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_choose_duty_category")        state_duty_page.choose_city(city=city)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_spb_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_choose_city")        state_duty_page.set_doc_num(doc_num=doc_number)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_spb_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_set_doc_num")        state_duty_page.set_fio(fio=fio)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_spb_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_set_fio")        state_duty_page.click_payment_btn()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_spb_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_click_payment_btn")        # Проверка на наличие страницы оплаты        assert state_duty_page.verify_payment_page_loaded_a3(), f'На странице не появилась форма для оплаты'        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_spb_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_click_payment_btn")    @pytest.mark.parametrize("doc_number, fio, city", [        ('FA6169953', 'АБДУРОСУЛОВ ДОСТОН', 'Нижний Новгород')    ])    @allure.feature('Проверка оплаты госпошлины')    @pytest.mark.group7    @allure.story('За выдачу паспорта гражданина РФ - город Нижний Новгород')    def test_search_state_duty_nn_city(self, appium_driver, doc_number, fio, city):        # Инициализация стартовой страницы        start_page = StartPage(appium_driver)        # Инициализация страницы с сервисами        services_page = ServicesPage(appium_driver)        # Инициализация страницы с вводом данных для оплаты госпошлины        state_duty_page = StateDutyPage(appium_driver)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_nn_city',                        folder_name='main_page',                        screenshot_name=f"screen_after_launch_app")        # Переход в страницу с сервисами        start_page.go_to_services()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_nn_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_go_to_services")        # Переход в оплату госпошлины        services_page.go_to_payment_state_duty()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_nn_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_go_to_state_duty_page")        state_duty_page.choose_duty_category()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_nn_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_choose_duty_category")        state_duty_page.choose_city(city=city)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_nn_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_choose_city")        state_duty_page.set_doc_num(doc_num=doc_number)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_nn_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_set_doc_num")        state_duty_page.set_fio(fio=fio)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_nn_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_set_fio")        state_duty_page.click_payment_btn()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_nn_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_click_payment_btn")        # Проверка на наличие страницы оплаты        assert state_duty_page.verify_payment_page_loaded_a3(), f'На странице не появилась форма для оплаты'        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_nn_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_click_payment_btn")    @pytest.mark.parametrize("doc_number, fio, city", [        ('FA6169953', 'АБДУРОСУЛОВ ДОСТОН', 'Самара')    ])    @allure.feature('Проверка оплаты госпошлины')    @pytest.mark.group7    @allure.story('За выдачу паспорта гражданина РФ - город Самара')    def test_search_state_duty_samara_city(self, appium_driver, doc_number, fio, city):        # Инициализация стартовой страницы        start_page = StartPage(appium_driver)        # Инициализация страницы с сервисами        services_page = ServicesPage(appium_driver)        # Инициализация страницы с вводом данных для оплаты госпошлины        state_duty_page = StateDutyPage(appium_driver)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_samara_city',                        folder_name='main_page',                        screenshot_name=f"screen_after_launch_app")        # Переход в страницу с сервисами        start_page.go_to_services()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_samara_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_go_payments_page")        # Переход в оплату госпошлины        services_page.go_to_payment_state_duty()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_samara_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_go_to_state_duty_page")        state_duty_page.choose_duty_category()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_samara_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_choose_duty_category")        state_duty_page.choose_city(city=city)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_samara_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_choose_city")        state_duty_page.set_doc_num(doc_num=doc_number)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_samara_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_set_doc_num")        state_duty_page.set_fio(fio=fio)        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_samara_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_set_fio")        state_duty_page.click_payment_btn()        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_samara_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_click_payment_btn")        # Проверка на наличие страницы оплаты        assert state_duty_page.verify_payment_page_loaded_a3(), f'На странице не появилась форма для оплаты'        take_screenshot(driver=appium_driver, test_name='test_search_state_duty_samara_city',                        folder_name='payments_page',                        screenshot_name=f"screen_after_click_payment_btn")    # @allure.feature('Проверка оплаты госпошлины')    # @allure.story('За выдачу паспорта гражданина РФ - город Другой')    # def test_search_state_duty_another_city(self, appium_driver):    #     # Инициализация стартовой страницы    #     start_page = StartPage(appium_driver)    #     # Инициализация страницы с выбором типа платежа    #     payments_page = PaymentsPage(appium_driver)    #     # Инициализация страницы с вводом данных для оплаты госпошлины    #     state_duty_page = StateDutyPage(appium_driver)    #    #     # Переход в страницу с платежами    #     start_page.go_to_payments()    #     # Переход в оплату госпошлины    #     payments_page.go_to_payment_state_duty()    #     # Заполнение полей, по умолчанию стоят поля:    #     # duty_category - За выдачу паспорта гражданина РФ, city - Москва, document - Паспорт иностранного гражданина,    #     state_duty_page.set_data(city='Другой', doc_number='FA6169953', fio='АБДУРОСУЛОВ ДОСТОН')    #    #     # Проверяется, произошёл ли переход на страницу с оплатой    #     assert state_duty_page.verify_payment_page_loaded(), 'Не удалось перейти на страницу оплаты'